{"version":3,"sources":["assets/Script/Model/GameModel.js"],"names":["GameModel","cells","cellBgs","lastPos","cc","v2","cellTypeNum","cellCreateType","init","setCellTypeNum","i","GRID_WIDTH","j","GRID_HEIGHT","CellModel","flag","getRandomCellType","result","checkPoint","length","setXY","setStartXY","initWithData","data","x","y","checkWithDirection","direction","queue","vis","push","front","point","cellModel","tmpX","tmpY","type","rowResult","call","colResult","newCellStatus","CELL_STATUS","BIRD","WRAP","LINE","COLUMN","tmp","concat","forEach","newEle","oldEle","printInfo","printStr","console","log","getCells","selectCell","pos","changeModels","effectsQueue","delta","Math","abs","curClickCell","lastClickCell","exchangeCell","result1","result2","curTime","pushToChangeModels","isCanBomb","status","COMMON","moveToAndBack","moveTo","ANITIME","TOUCH_MOVE","processCrush","cycleCount","bombModels","pos1","pos2","model1","model2","bombModel","newCellType","model","crushCell","createNewCell","processBomb","DIE","down","CELL_TYPE","setStatus","setVisible","newCheckPoint","curRow","k","count","indexOf","cleanCmd","cmd","tmpModel","num","createTypeList","CELL_BASENUM","index","floor","random","newBombModel","bombTime","BOMB_DELAY","addRowBomb","addColBomb","crushType","BOMB_BIRD_DELAY","addCrushEffect","playTime","step","action","addWrapBomb","needShake","toShake","shakeTime","DIE_SHAKE","toDie"],"mappings":"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","sourceRoot":"/","sourcesContent":["import CellModel from \"./CellModel\";\nimport { CELL_TYPE, CELL_BASENUM, CELL_STATUS, GRID_WIDTH, GRID_HEIGHT, ANITIME } from \"./ConstValue\";\n\nexport default class GameModel {\n    constructor() {\n        this.cells = null;\n        this.cellBgs = null;\n        this.lastPos = cc.v2(-1, -1);\n        this.cellTypeNum = 5;\n        this.cellCreateType = []; // 升成种类只在这个数组里面查找\n    }\n\n    init(cellTypeNum) {\n        this.cells = [];\n        this.setCellTypeNum(cellTypeNum || this.cellTypeNum);\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            this.cells[i] = [];\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                this.cells[i][j] = new CellModel();\n            }\n        }\n\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                let flag = true;\n                while (flag) {\n                    flag = false;\n                    this.cells[i][j].init(this.getRandomCellType());\n                    let result = this.checkPoint(j, i)[0];\n                    if (result.length > 2) {\n                        flag = true;\n                    }\n                    this.cells[i][j].setXY(j, i);\n                    this.cells[i][j].setStartXY(j, i);\n                }\n            }\n        }\n\n    }\n\n    initWithData(data) {\n        // to do\n    }\n\n    checkPoint(x, y) {\n        let checkWithDirection = function (x, y, direction) {\n            let queue = [];\n            let vis = [];\n            vis[x + y * 9] = true;\n            queue.push(cc.v2(x, y));\n            let front = 0;\n            while (front < queue.length) {\n                //let direction = [cc.v2(0, -1), cc.v2(0, 1), cc.v2(1, 0), cc.v2(-1, 0)];\n                let point = queue[front];\n                let cellModel = this.cells[point.y][point.x];\n                front++;\n                if (!cellModel) {\n                    continue;\n                }\n                for (let i = 0; i < direction.length; i++) {\n                    let tmpX = point.x + direction[i].x;\n                    let tmpY = point.y + direction[i].y;\n                    if (tmpX < 1 || tmpX > 9\n                        || tmpY < 1 || tmpY > 9\n                        || vis[tmpX + tmpY * 9]\n                        || !this.cells[tmpY][tmpX]) {\n                        continue;\n                    }\n                    if (cellModel.type == this.cells[tmpY][tmpX].type) {\n                        vis[tmpX + tmpY * 9] = true;\n                        queue.push(cc.v2(tmpX, tmpY));\n                    }\n                }\n            }\n            return queue;\n        }\n        let rowResult = checkWithDirection.call(this, x, y, [cc.v2(1, 0), cc.v2(-1, 0)]);\n        let colResult = checkWithDirection.call(this, x, y, [cc.v2(0, -1), cc.v2(0, 1)]);\n        let result = [];\n        let newCellStatus = \"\";\n        if (rowResult.length >= 5 || colResult.length >= 5) {\n            newCellStatus = CELL_STATUS.BIRD;\n        }\n        else if (rowResult.length >= 3 && colResult.length >= 3) {\n            newCellStatus = CELL_STATUS.WRAP;\n        }\n        else if (rowResult.length >= 4) {\n            newCellStatus = CELL_STATUS.LINE;\n        }\n        else if (colResult.length >= 4) {\n            newCellStatus = CELL_STATUS.COLUMN;\n        }\n        if (rowResult.length >= 3) {\n            result = rowResult;\n        }\n        if (colResult.length >= 3) {\n            let tmp = result.concat();\n            colResult.forEach(function (newEle) {\n                let flag = false;\n                tmp.forEach(function (oldEle) {\n                    if (newEle.x == oldEle.x && newEle.y == oldEle.y) {\n                        flag = true;\n                    }\n                }, this);\n                if (!flag) {\n                    result.push(newEle);\n                }\n            }, this);\n        }\n        return [result, newCellStatus, this.cells[y][x].type];\n    }\n\n    printInfo() {\n        for (var i = 1; i <= 9; i++) {\n            var printStr = \"\";\n            for (var j = 1; j <= 9; j++) {\n                printStr += this.cells[i][j].type + \" \";\n            }\n            console.log(printStr);\n        }\n    }\n\n    getCells() {\n        return this.cells;\n    }\n    // controller调用的主要入口\n    // 点击某个格子\n    selectCell(pos) {\n        this.changeModels = [];// 发生改变的model，将作为返回值，给view播动作\n        this.effectsQueue = []; // 动物消失，爆炸等特效\n        var lastPos = this.lastPos;\n        var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);\n        if (delta != 1) { //非相邻格子， 直接返回\n            this.lastPos = pos;\n            return [[], []];\n        }\n        let curClickCell = this.cells[pos.y][pos.x]; //当前点击的格子\n        let lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格式\n        this.exchangeCell(lastPos, pos);\n        var result1 = this.checkPoint(pos.x, pos.y)[0];\n        var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];\n        this.curTime = 0; // 动画播放的当前时间\n        this.pushToChangeModels(curClickCell);\n        this.pushToChangeModels(lastClickCell);\n        let isCanBomb = (curClickCell.status != CELL_STATUS.COMMON && // 判断两个是否是特殊的动物\n            lastClickCell.status != CELL_STATUS.COMMON) ||\n            curClickCell.status == CELL_STATUS.BIRD ||\n            lastClickCell.status == CELL_STATUS.BIRD;\n        if (result1.length < 3 && result2.length < 3 && !isCanBomb) {//不会发生消除的情况\n            this.exchangeCell(lastPos, pos);\n            curClickCell.moveToAndBack(lastPos);\n            lastClickCell.moveToAndBack(pos);\n            this.lastPos = cc.v2(-1, -1);\n            return [this.changeModels];\n        }\n        else {\n            this.lastPos = cc.v2(-1, -1);\n            curClickCell.moveTo(lastPos, this.curTime);\n            lastClickCell.moveTo(pos, this.curTime);\n            var checkPoint = [pos, lastPos];\n            this.curTime += ANITIME.TOUCH_MOVE;\n            this.processCrush(checkPoint);\n            return [this.changeModels, this.effectsQueue];\n        }\n    }\n    // 消除\n    processCrush(checkPoint) {\n        let cycleCount = 0;\n        while (checkPoint.length > 0) {\n            let bombModels = [];\n            if (cycleCount == 0 && checkPoint.length == 2) { //特殊消除\n                let pos1 = checkPoint[0];\n                let pos2 = checkPoint[1];\n                let model1 = this.cells[pos1.y][pos1.x];\n                let model2 = this.cells[pos2.y][pos2.x];\n                if (model1.status == CELL_STATUS.BIRD || model2.status == CELL_STATUS.BIRD) {\n                    let bombModel = null;\n                    if (model1.status == CELL_STATUS.BIRD) {\n                        model1.type = model2.type;\n                        bombModels.push(model1);\n                    }\n                    else {\n                        model2.type = model1.type;\n                        bombModels.push(model2);\n                    }\n\n                }\n            }\n            for (var i in checkPoint) {\n                var pos = checkPoint[i];\n                if (!this.cells[pos.y][pos.x]) {\n                    continue;\n                }\n                var [result, newCellStatus, newCellType] = this.checkPoint(pos.x, pos.y);\n\n                if (result.length < 3) {\n                    continue;\n                }\n                for (var j in result) {\n                    var model = this.cells[result[j].y][result[j].x];\n                    this.crushCell(result[j].x, result[j].y, false, cycleCount);\n                    if (model.status != CELL_STATUS.COMMON) {\n                        bombModels.push(model);\n                    }\n                }\n                this.createNewCell(pos, newCellStatus, newCellType);\n\n            }\n            this.processBomb(bombModels, cycleCount);\n            this.curTime += ANITIME.DIE;\n            checkPoint = this.down();\n            cycleCount++;\n        }\n    }\n\n    //生成新cell\n    createNewCell(pos, status, type) {\n        if (status == \"\") {\n            return;\n        }\n        if (status == CELL_STATUS.BIRD) {\n            type = CELL_TYPE.BIRD\n        }\n        let model = new CellModel();\n        this.cells[pos.y][pos.x] = model\n        model.init(type);\n        model.setStartXY(pos.x, pos.y);\n        model.setXY(pos.x, pos.y);\n        model.setStatus(status);\n        model.setVisible(0, false);\n        model.setVisible(this.curTime, true);\n        this.changeModels.push(model);\n    }\n    // 下落\n    down() {\n        let newCheckPoint = [];\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                if (this.cells[i][j] == null) {\n                    var curRow = i;\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\n                        if (this.cells[k][j]) {\n                            this.pushToChangeModels(this.cells[k][j]);\n                            newCheckPoint.push(this.cells[k][j]);\n                            this.cells[curRow][j] = this.cells[k][j];\n                            this.cells[k][j] = null;\n                            this.cells[curRow][j].setXY(j, curRow);\n                            this.cells[curRow][j].moveTo(cc.v2(j, curRow), this.curTime);\n                            curRow++;\n                        }\n                    }\n                    var count = 1;\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\n                        this.cells[k][j] = new CellModel();\n                        this.cells[k][j].init(this.getRandomCellType());\n                        this.cells[k][j].setStartXY(j, count + GRID_HEIGHT);\n                        this.cells[k][j].setXY(j, count + GRID_HEIGHT);\n                        this.cells[k][j].moveTo(cc.v2(j, k), this.curTime);\n                        count++;\n                        this.changeModels.push(this.cells[k][j]);\n                        newCheckPoint.push(this.cells[k][j]);\n                    }\n\n                }\n            }\n        }\n        this.curTime += ANITIME.TOUCH_MOVE + 0.3\n        return newCheckPoint;\n    }\n\n    pushToChangeModels(model) {\n        if (this.changeModels.indexOf(model) != -1) {\n            return;\n        }\n        this.changeModels.push(model);\n    }\n\n    cleanCmd() {\n        for (var i = 1; i <= GRID_WIDTH; i++) {\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\n                if (this.cells[i][j]) {\n                    this.cells[i][j].cmd = [];\n                }\n            }\n        }\n    }\n\n    exchangeCell(pos1, pos2) {\n        var tmpModel = this.cells[pos1.y][pos1.x];\n        this.cells[pos1.y][pos1.x] = this.cells[pos2.y][pos2.x];\n        this.cells[pos1.y][pos1.x].x = pos1.x;\n        this.cells[pos1.y][pos1.x].y = pos1.y;\n        this.cells[pos2.y][pos2.x] = tmpModel;\n        this.cells[pos2.y][pos2.x].x = pos2.x;\n        this.cells[pos2.y][pos2.x].y = pos2.y;\n    }\n    // 设置种类\n    // Todo 改成乱序算法\n    setCellTypeNum(num) {\n        console.log(\"num = \", num);\n        this.cellTypeNum = num;\n        this.cellCreateType = [];\n        let createTypeList = this.cellCreateType;\n        for (let i = 1; i <= CELL_BASENUM; i++) {\n            createTypeList.push(i);\n        }\n        for (let i = 0; i < createTypeList.length; i++) {\n            let index = Math.floor(Math.random() * (CELL_BASENUM - i)) + i;\n            createTypeList[i], createTypeList[index] = createTypeList[index], createTypeList[i]\n        }\n    }\n    // 随要生成一个类型\n    getRandomCellType() {\n        var index = Math.floor(Math.random() * this.cellTypeNum);\n        return this.cellCreateType[index];\n    }\n    // TODO bombModels去重\n    processBomb(bombModels, cycleCount) {\n        while (bombModels.length > 0) {\n            let newBombModel = [];\n            let bombTime = ANITIME.BOMB_DELAY;\n            bombModels.forEach(function (model) {\n                if (model.status == CELL_STATUS.LINE) {\n                    for (let i = 1; i <= GRID_WIDTH; i++) {\n                        if (this.cells[model.y][i]) {\n                            if (this.cells[model.y][i].status != CELL_STATUS.COMMON) {\n                                newBombModel.push(this.cells[model.y][i]);\n                            }\n                            this.crushCell(i, model.y, false, cycleCount);\n                        }\n                    }\n                    this.addRowBomb(this.curTime, cc.v2(model.x, model.y));\n                }\n                else if (model.status == CELL_STATUS.COLUMN) {\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        if (this.cells[i][model.x]) {\n                            if (this.cells[i][model.x].status != CELL_STATUS.COMMON) {\n                                newBombModel.push(this.cells[i][model.x]);\n                            }\n                            this.crushCell(model.x, i, false, cycleCount);\n                        }\n                    }\n                    this.addColBomb(this.curTime, cc.v2(model.x, model.y));\n                }\n                else if (model.status == CELL_STATUS.WRAP) {\n                    let x = model.x;\n                    let y = model.y;\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\n                            let delta = Math.abs(x - j) + Math.abs(y - i);\n                            if (this.cells[i][j] && delta <= 2) {\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                                    newBombModel.push(this.cells[i][j]);\n                                }\n                                this.crushCell(j, i, false, cycleCount);\n                            }\n                        }\n                    }\n                }\n                else if (model.status == CELL_STATUS.BIRD) {\n                    let crushType = model.type\n                    if (bombTime < ANITIME.BOMB_BIRD_DELAY) {\n                        bombTime = ANITIME.BOMB_BIRD_DELAY;\n                    }\n                    if (crushType == CELL_TYPE.BIRD) {\n                        crushType = this.getRandomCellType();\n                    }\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\n                            if (this.cells[i][j] && this.cells[i][j].type == crushType) {\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                                    newBombModel.push(this.cells[i][j]);\n                                }\n                                this.crushCell(j, i, true, cycleCount);\n                            }\n                        }\n                    }\n                    //this.crushCell(model.x, model.y);\n                }\n            }, this);\n            if (bombModels.length > 0) {\n                this.curTime += bombTime;\n            }\n            bombModels = newBombModel;\n        }\n    }\n    /**\n     * \n     * @param {开始播放的时间} playTime \n     * @param {*cell位置} pos \n     * @param {*第几次消除，用于播放音效} step \n     */\n    addCrushEffect(playTime, pos, step) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"crush\",\n            step\n        });\n    }\n\n    addRowBomb(playTime, pos) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"rowBomb\"\n        });\n    }\n\n    addColBomb(playTime, pos) {\n        this.effectsQueue.push({\n            playTime,\n            pos,\n            action: \"colBomb\"\n        });\n    }\n\n    addWrapBomb(playTime, pos) {\n        // TODO\n    }\n    // cell消除逻辑\n    crushCell(x, y, needShake, step) {\n        let model = this.cells[y][x];\n        this.pushToChangeModels(model);\n        if (needShake) {\n            model.toShake(this.curTime)\n        }\n\n        let shakeTime = needShake ? ANITIME.DIE_SHAKE : 0;\n        model.toDie(this.curTime + shakeTime);\n        this.addCrushEffect(this.curTime + shakeTime, cc.v2(model.x, model.y), step);\n        this.cells[y][x] = null;\n    }\n\n}\n\n"]}